version: '3'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      # AWS Configuration for S3 access
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - DOCUMENT_METADATA_S3_BUCKET=${DOCUMENT_METADATA_S3_BUCKET}
      
      # Google Cloud / Gemini AI Configuration (required for fast_chat_v2 endpoint)
      - GCP_SERVICE_ACCOUNT_INFO=${GCP_SERVICE_ACCOUNT_INFO}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # API Keys
      - SUMMARIZER_API_KEY=${SUMMARIZER_API_KEY}
      - CHATBOT_API_KEY=${CHATBOT_API_KEY}
      
      # ChromaDB Configuration
      - CHROMA_HOST=http://chroma:8000
      - FORCE_LLM_FALLBACK=true
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Mount the .env file for application secrets
      - ./.env:/app/.env
    depends_on:
      - chroma
    restart: unless-stopped

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    environment:
      - PERSIST_DIRECTORY=/app/chroma_db
      - CHROMA_DB_IMPL=duckdb+parquet
    volumes:
      - chroma_data:/app/chroma_db
    ports:
      # Expose on host 8001 for debugging; internal port 8000
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chroma_data:
